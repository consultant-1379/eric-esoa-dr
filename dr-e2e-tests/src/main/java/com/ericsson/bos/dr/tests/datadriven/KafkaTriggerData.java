/*******************************************************************************
 * COPYRIGHT Ericsson 2023
 *
 *
 *
 * The copyright to the computer program(s) herein is the property of
 *
 * Ericsson Inc. The programs may be used and/or copied only with written
 *
 * permission from Ericsson Inc. or in accordance with the terms and
 *
 * conditions stipulated in the agreement/contract under which the
 *
 * program(s) have been supplied.
 ******************************************************************************/
package com.ericsson.bos.dr.tests.datadriven;

import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.Random;

import com.ericsson.bos.dr.tests.clients.subsystem.Subsystem;
import com.ericsson.bos.dr.tests.utils.JsonUtils;
import org.apache.commons.lang3.builder.ToStringBuilder;

public class KafkaTriggerData {

    private static final String GROUP_ID_PREFIX = "dr-test-group";

    private String description;
    private String featurePack;
    private String listener;
    private Map<String, Object> event = Collections.emptyMap();
    private String subsystemFilePath;
    private Subsystem subsystem;
    private boolean useDefaultGroupId;
    private List<String> topics;
    private String triggeredJobName; // this is the name that will be auto-generated by D&R for a triggered job
    private String groupId;
    private final Random random = new Random();

    public String getFeaturePack() {
        return featurePack;
    }

    public void setFeaturePack(String featurePack) {
        this.featurePack = featurePack;
    }

    public String getListener() {
        return listener;
    }

    public void setListener(String listener) {
        this.listener = listener;
    }

    public Map<String, Object> getEvent() {
        return event;
    }

    public void setEvent(Map<String, Object> event) {
        this.event = event;
    }

    public void setSubsystemFilePath(String subsystemFilePath) {
        this.subsystemFilePath = subsystemFilePath;
    }

    public Subsystem getSubsystem() {
        if (subsystem == null) {
            subsystem = JsonUtils.readClassPathResource(subsystemFilePath, Subsystem.class);
        }
        return subsystem;
    }

    public boolean isUseDefaultGroupId() {
        return useDefaultGroupId;
    }

    public void setUseDefaultGroupId(boolean useDefaultGroupId) {
        this.useDefaultGroupId = useDefaultGroupId;
        if (!useDefaultGroupId) {
            this.groupId = GROUP_ID_PREFIX.concat("-").concat(String.valueOf(random.nextInt()));
        }
    }

    public String getGroupId() {
        return groupId;
    }

    public List<String> getTopics() {
        return topics;
    }

    public void setTopics(List<String> topics) {
        this.topics = topics;
    }

    public String getTriggeredJobName() {
        return triggeredJobName;
    }

    public void setTriggeredJobName(String triggeredJobName) {
        this.triggeredJobName = triggeredJobName;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(final String description) {
        this.description = description;
    }

    @Override
    public String toString() {
        return new ToStringBuilder(this).append("description", description)
                .append("featurePack", featurePack)
                .append("listener", listener)
                .append("event", event)
                .append("subsystemFilePath", subsystemFilePath)
                .append("subsystem", subsystem)
                .append("useDefaultGroupId", useDefaultGroupId)
                .append("topics", topics)
                .append("triggeredJobName", triggeredJobName)
                .append("groupId", groupId)
                .append("random", random)
                .toString();
    }
}